# This is the GitHub Action which
# automatically updates https://www.fineract.dev
#
# see https://jira.apache.org/jira/browse/FINERACT-970
# https://github.com/marketplace/actions/setup-gcloud-environment
# and http://blog2.vorburger.ch/2020/05/fineractdev-cicd-from-github-to-google.html
#
# Created by Michael Vorburger.ch for Fineract in May 2020.
#

name: Deploy to Gedit GCP Instance
env:  
  SERVICE: fineract
  REGION: us-central1
  INSTANCE_CONNECTION_NAME: mifos-308109:us-central1:fineractmysql1
  PORT: 8443

on:
  push:
    branches:
      - gedit-1.6.0

jobs:
  setup-build-deploy:
    name: Deploy on Gedit GCP
    if: github.repository == 'openMF/fineract'
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v2

      - id: 'auth'
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_GEDIT}}'

      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID_GEDIT }}

      - name: Authorize Docker push
        run: gcloud auth configure-docker    

      - name: Pull from Docker Hub
        run: |
            docker pull fintecheando/fineract:1.6.1

      - name: Tag the Image for GCR.io Docker Repository
        run: |
            docker tag fintecheando/fineract:1.6.1 gcr.io/${{ secrets.GOOGLE_PROJECT_ID_GEDIT }}/apache/fineract:1.6.1

      - name: Push the Image for GCR.io Docker Repository
        run: |
            docker push gcr.io/${{ secrets.GOOGLE_PROJECT_ID_GEDIT }}/apache/fineract:1.6.1

      - name: Deploy to Cloud Run  
        run: |-
            gcloud run deploy ${{ env.SERVICE }} \
            --region ${{ env.REGION }} \
            --image gcr.io/${{ secrets.GOOGLE_PROJECT_ID_GEDIT }}/apache/fineract:1.6.1 \
            --platform "managed" \
            --allow-unauthenticated \ 
            --port ${{ env.PORT }} \
            --add-cloudsql-instances ${{ env.INSTANCE_CONNECTION_NAME }} \
            --set-env-vars "FINERACT_NODE_ID=1" \
            --set-env-vars ${{ secrets.FINERACT_HIKARI_DRIVER_SOURCE_CLASS_NAME }} \
            --set-env-vars ${{ secrets.FINERACT_HIKARI_JDBC_URL }} \
            --set-env-vars "FINERACT_HIKARI_USERNAME=root" \
            --set-env-vars ${{ secrets.FINERACT_HIKARI_PASSWORD }} \
            --set-env-vars "FINERACT_HIKARI_MINIMUM_IDLE=3" \
            --set-env-vars "FINERACT_HIKARI_MAXIMUM_POOL_SIZE=10" \
            --set-env-vars "FINERACT_HIKARI_IDLE_TIMEOUT=60000" \
            --set-env-vars "FINERACT_HIKARI_CONNECTION_TIMEOUT=20000" \
            --set-env-vars "FINERACT_HIKARI_TEST_QUERY=SELECT 1" \
            --set-env-vars "FINERACT_HIKARI_AUTO_COMMIT=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_CACHE_PREP_STMTS=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_PREP_STMT_CACHE_SIZE=250" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_PREP_STMT_CACHE_SQL_LIMIT=2048" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_USE_SERVER_PREP_STMTS=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_USE_LOCAL_SESSION_STATE=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_REWRITE_BATCHED_STATEMENTS=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_CACHE_RESULT_SET_METADATA=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_CACHE_SERVER_CONFIGURATION=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_ELIDE_SET_AUTO_COMMITS=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_MAINTAIN_TIME_STATS=false" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_LOG_SLOW_QUERIES=true" \
            --set-env-vars "FINERACT_HIKARI_DS_PROPERTIES_DUMP_QUERIES_IN_EXCEPTION=true" \
            --set-env-vars "FINERACT_DEFAULT_TENANTDB_HOSTNAME=fineractmysql" \
            --set-env-vars "FINERACT_DEFAULT_TENANTDB_PORT=3306" \
            --set-env-vars "FINERACT_DEFAULT_TENANTDB_UID=root" \
            --set-env-vars ${{ secrets.FINERACT_DEFAULT_TENANTDB_PWD }} \
            --set-env-vars "FINERACT_DEFAULT_TENANTDB_CONN_PARAMS=" \
            --set-env-vars "FINERACT_DEFAULT_TENANTDB_TIMEZONE=Asia/Kolkata" \
            --set-env-vars "FINERACT_DEFAULT_TENANTDB_IDENTIFIER=default" \
            --set-env-vars "FINERACT_DEFAULT_TENANTDB_NAME=fineract_default" \
            --set-env-vars "FINERACT_DEFAULT_TENANTDB_DESCRIPTION=Default Demo Tenant" \
            --quiet